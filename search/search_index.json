{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DCC-EX Documentation","text":"<p>Testing MkDocs for DCC-EX documentation</p>"},{"location":"exrail/multi-files/","title":"Multiple Files in EXRAIL","text":"<p>EXRAIL commands are read by the compiler only from the file myAutomation.h, the absence of a file with this name means no EXRAIL code is loaded into the command station. However, it is simple to partition myAutomation.h into separate files for the convenience of editing. For example myTurnouts.h, myRoster.h and so on. By ensuring all the files start with \"my\" it avoids issues with name clashes or Git.</p> <p>To include your additional files, use the c++ preprocessor #include control in myAutomation.h to insert the file contents exactly as if you had typed them into myAutomation.h</p> <pre><code>// Include my roster file\n#include \"myRoster.h\"\n// Include my turnout definitions\n#include \"myTurnouts.h\"\n// Special animation\n#include \"myCowOnElectricFence.h\"\n</code></pre> <p>A note to hardened C++ programmers... do not be tempted to add include guards to your .h files.</p>"},{"location":"exrail/roster-similar-locos/","title":"Roster for Similar Sound Locos","text":"<p>The ROSTER command in EXRAIL can be tedious if you have several sound locos with the same function settings. Using a preprocessor definition saves typing.</p> <pre><code>ROSTER(1201,\"Red class 99\",\"light/*horn/flash/bang/wallop/squeal/honk\") \nROSTER(1202,\"Green class 99\",\"light/*horn/flash/bang/wallop/squeal/honk\") \n</code></pre> <p>Can be simplified by pre-defining the functions:</p> <pre><code>#define CLASS99F \"light/*horn/flash/bang/wallop/squeal/honk\" \nROSTER(1201,\"Red class 99\",CLASS99F) \nROSTER(1202,\"Green class 99\",CLASS99F) \n</code></pre> <p>This technique is particularly useful for rostering DC tracks where the function keys are related to PWM frequency:</p> <pre><code>#define DCFuncs\"/////////////////////////////FQ490 Hz/FQ3400 Hz/FQ62500 Hz\"\nROSTER(1225,\"DC TRACK B 1225\",DCFuncs)\nROSTER(1226,\"DC TRACK C 1226\",DCFuncs)\n</code></pre> <p>It is also possible to utilise the compiler rule that \"Hello\" \"Sailor\" is treated as \"HelloSailor\". This means that common functions can be used with loco specific additions.</p> <pre><code>#define CommonFuncs \"light/*horn\" \nROSTER(1201,\"Noisy class 99\",CommonFuncs \"/flash/bang/wallop/squeal/honk\") \nROSTER(1202,\"Quieter class 99\",CommonFuncs) \n</code></pre>"},{"location":"reference/serial_commands/","title":"Serial commands","text":"<p><code>&lt;#&gt;</code></p> <p>Request number of simultaneously supported locos</p> <p><code>&lt;!&gt;</code></p> <p>Emergency stop all locos</p> <p><code>&lt;t loco&gt;</code></p> <p>Request loco status</p> <p><code>&lt;t loco tspeed direction&gt;</code></p> <p>Set throttle speed(0..127) and direction (0=reverse, 1=fwd) </p> <p><code>&lt;t ignore loco tspeed direction&gt;</code></p> <p>(Deprecated) Set throttle speed and direction</p> <p><code>&lt;f loco byte1&gt;</code></p> <p>(Deprecated use F) Set loco function group </p> <p><code>&lt;f loco group byte2&gt;</code></p> <p>(Deprecated use F) Set loco function group </p> <p><code>&lt;T&gt;</code></p> <p>List all turnouts</p> <p><code>&lt;T id&gt;</code></p> <p>Delete turnout</p> <p><code>&lt;T id X&gt;</code></p> <p>List turnout details</p> <p><code>&lt;T id T&gt;</code></p> <p>Throw Turnout</p> <p><code>&lt;T id C&gt;</code></p> <p>Close turnout#</p> <p><code>&lt;T id value&gt;</code></p> <p>Close (value=0) ot Throw turnout</p> <p><code>&lt;T id SERVO vpin closedValue thrownValue&gt;</code></p> <p>Create Servo turnout  </p> <p><code>&lt;T id VPIN vpin&gt;</code></p> <p>Create pin turnout</p> <p><code>&lt;T id DCC addr subadd&gt;</code></p> <p>Create DCC turnout </p> <p><code>&lt;T id DCC linearAddr&gt;</code></p> <p>Create DCC turnout</p> <p><code>&lt;T id addr subadd&gt;</code></p> <p>Create DCC turnout</p> <p><code>&lt;T id vpin closedValue thrownValue&gt;</code></p> <p>Create SERVO turnout</p> <p><code>&lt;S id vpin pullup&gt;</code></p> <p>Create Sensor</p> <p><code>&lt;S id&gt;</code></p> <p>Delete sensor</p> <p><code>&lt;S&gt;</code></p> <p>List sensors</p> <p><code>&lt;J M&gt;</code></p> <p>List stash values</p> <p><code>&lt;J M stash_id&gt;</code></p> <p>get stash value</p> <p><code>&lt;J M CLEAR ALL&gt;</code></p> <p>Clear all stash values</p> <p><code>&lt;J M CLEAR stash_id&gt;</code></p> <p>Clear given stash</p> <p><code>&lt;J M stashId locoId&gt;</code></p> <p>Set stash value</p> <p><code>&lt;J M CLEAR ANY locoId&gt;</code></p> <p>Clear all stash entries that contain locoId</p> <p><code>&lt;J C&gt;</code></p> <p>get fastclock time</p> <p><code>&lt;J C mmmm nn&gt;</code></p> <p>Set fastclock time</p> <p><code>&lt;J G&gt;</code></p> <p>FReport gauge limits </p> <p><code>&lt;J I&gt;</code></p> <p>Report currents </p> <p><code>&lt;J A&gt;</code></p> <p>List Routes</p> <p><code>&lt;J R&gt;</code></p> <p>List Roster</p> <p><code>&lt;J R id&gt;</code></p> <p>Get roster for loco</p> <p><code>&lt;J T&gt;</code></p> <p>Get turnout list </p> <p><code>&lt;J T id&gt;</code></p> <p>Get turnout state and description</p> <p><code>&lt;z vpin&gt;</code></p> <p>Set pin. HIGH iv vpin positive, LOW if vpin negative  </p> <p><code>&lt;z vpin analog profile duration&gt;</code></p> <p>Change analog value over duration (Fade or servo move)</p> <p><code>&lt;z vpin analog profile&gt;</code></p> <p>Write analog device using profile number (Fade or servo movement)</p> <p><code>&lt;z vpin analog&gt;</code></p> <p>Write analog device value</p> <p><code>&lt;I&gt;</code></p> <p>List all turntables</p> <p><code>&lt;I id&gt;</code></p> <p>Broadcast turntable type and current position    </p> <p><code>&lt;I id position&gt;</code></p> <p>Rotate a DCC turntable</p> <p><code>&lt;I id DCC home&gt;</code></p> <p>Create DCC turntable</p> <p><code>&lt;I id position activity&gt;</code></p> <p>Rotate an EXTT turntable</p> <p><code>&lt;I id EXTT vpin home&gt;</code></p> <p>Create an EXTT turntable</p> <p><code>&lt;I id ADD position value angle&gt;</code></p> <p>Add turntable position</p> <p><code>&lt;Q&gt;</code></p> <p>List all sensors </p> <p><code>&lt;s&gt;</code></p> <p>Command station status</p> <p><code>&lt;E&gt;</code></p> <p>STORE EPROM</p> <p><code>&lt;e&gt;</code></p> <p>CLEAR EPROM</p> <p><code>&lt;Z&gt;</code></p> <p>List Output definitions </p> <p><code>&lt;Z id pin iflag&gt;</code></p> <p>Create Output</p> <p><code>&lt;Z id active&gt;</code></p> <p>Set output </p> <p><code>&lt;Z id&gt;</code></p> <p>Delete output</p> <p><code>&lt;D ACK ON&gt;</code></p> <p>Enable PROG track diagnostics</p> <p><code>&lt;D ACK OFF&gt;</code></p> <p>Disable PROG track diagnostics</p> <p><code>&lt;D CABS&gt;</code></p> <p>Diagnostic display loco state table</p> <p><code>&lt;D RAM&gt;</code></p> <p>Diagnostic display free RAM</p> <p><code>&lt;D CMD ON&gt;</code></p> <p>Enable command input diagnostics</p> <p><code>&lt;D CMD OFF&gt;</code></p> <p>Disable command input diagnostics</p> <p><code>&lt;D RAILCOM ON&gt;</code></p> <p>Enable Railcom diagnostics</p> <p><code>&lt;D RAILCOM OFF&gt;</code></p> <p>DIsable Railcom diagnostics</p> <p><code>&lt;D WIFI ON&gt;</code></p> <p>Enable Wifi diagnostics</p> <p><code>&lt;D WIFI OFF&gt;</code></p> <p>Disable Wifi diagnostics</p> <p><code>&lt;D ETHERNET ON&gt;</code></p> <p>Enable Ethernet diagnostics</p> <p><code>&lt;D ETHERNET OFF&gt;</code></p> <p>Disabel Ethernet diagnostics </p> <p><code>&lt;D WIT ON&gt;</code></p> <p>Enable Withrottle diagnostics</p> <p><code>&lt;D WIT OFF&gt;</code></p> <p>Disable Withrottle diagnostics </p> <p><code>&lt;D LCN ON&gt;</code></p> <p>Enable LCN Diagnostics</p> <p><code>&lt;D LCN OFF&gt;</code></p> <p>Disabel LCN diagnostics</p> <p><code>&lt;D WEBSOCKET ON&gt;</code></p> <p>Enable Websocket diagnostics </p> <p><code>&lt;D WEBSOCKET OFF&gt;</code></p> <p>Disable wensocket diagnostics </p> <p><code>&lt;D EEPROM numentries&gt;</code></p> <p>Dump EEPROM contents</p> <p><code>&lt;D ANOUT vpin position&gt;</code></p> <p>see  <p><code>&lt;D ANOUT vpin position profile&gt;</code></p> <p>see  <p><code>&lt;D SERVO vpin position&gt;</code></p> <p>Test servo</p> <p><code>&lt;D SERVO vpin position profile&gt;</code></p> <p>Test servo</p> <p><code>&lt;D ANIN vpin&gt;</code></p> <p>Display analogue input value</p> <p><code>&lt;D HAL SHOW&gt;</code></p> <p>Show HAL devices table</p> <p><code>&lt;D HAL RESET&gt;</code></p> <p>Reset all HAL devices</p> <p><code>&lt;D TT vpin steps&gt;</code></p> <p>Test turntable</p> <p><code>&lt;D TT vpin steps activity&gt;</code></p> <p>Test turntable</p> <p><code>&lt;C PROGBOOST&gt;</code></p> <p>Configute PROG track boost</p> <p><code>&lt;C RESET&gt;</code></p> <p>Reset and restart command station</p> <p><code>&lt;C SPEED28&gt;</code></p> <p>Set all DCC speed commands as 28 step to old decoders</p> <p><code>&lt;C SPEED128&gt;</code></p> <p>Set all DCC speed commands to 128 step (default)</p> <p><code>&lt;C RAILCOM ON&gt;</code></p> <p>Enable Railcom cutout </p> <p><code>&lt;C RAILCOM OFF&gt;</code></p> <p>Disable Railcom cutout</p> <p><code>&lt;C RAILCOM DEBUG&gt;</code></p> <p>Enable Railcom cutout for easy scope reading test</p> <p><code>&lt;D ACK LIMIT value&gt;</code></p> <p>Set ACK detection limit mA</p> <p><code>&lt;D ACK MIN value MS&gt;</code></p> <p>Set ACK minimum duration mS</p> <p><code>&lt;D ACK MIN value&gt;</code></p> <p>Set ACK minimum duration uS</p> <p><code>&lt;D ACK MAX value MS&gt;</code></p> <p>Set ACK maximum duration mS</p> <p><code>&lt;D ACK MAX value&gt;</code></p> <p>Set ACK maximum duration uS</p> <p><code>&lt;D ACK RETRY value&gt;</code></p> <p>Set ACK retry count</p> <p><code>&lt;C WIFI \"ssid\" \"password\"&gt;</code></p> <p>reconfigure stored wifi credentials </p> <p><code>&lt;o vpin&gt;</code></p> <p>Set neopixel on(vpin&gt;0) or off(vpin&lt;0)</p> <p><code>&lt;o vpin count&gt;</code></p> <p>Set multiple neopixels on(vpin&gt;0) or off(vpin&lt;0)</p> <p><code>&lt;o vpin r g b&gt;</code></p> <p>Set neopixel colour</p> <p><code>&lt;o vpin r g b count&gt;</code></p> <p>Set multiple neopixels colour </p> <p><code>&lt;1&gt;</code></p> <p>Power ON all tracks</p> <p><code>&lt;1 MAIN&gt;</code></p> <p>Power on MAIN track</p> <p><code>&lt;1 PROG&gt;</code></p> <p>Power on PROG track</p> <p><code>&lt;1 JOIN&gt;</code></p> <p>JOIN prog track to MAIN and power</p> <p><code>&lt;1 track&gt;</code></p> <p>Power on given track</p> <p><code>&lt;0&gt;</code></p> <p>Power off all tracks</p> <p><code>&lt;0 MAIN&gt;</code></p> <p>Power off MAIN track</p> <p><code>&lt;0 PROG&gt;</code></p> <p>Power off PROG track</p> <p><code>&lt;0 track&gt;</code></p> <p>Power off given track</p> <p><code>&lt;c&gt;</code></p> <p>Report main track currect (Deprecated)</p> <p><code>&lt;a address subaddress activate&gt;</code></p> <p>Send DCC accessory command</p> <p><code>&lt;a address subaddress activate onoff&gt;</code></p> <p>Send DCC accessory command with onoff control (TODO.. numbers) </p> <p><code>&lt;a linearaddress activate&gt;</code></p> <p>send dcc accessory command      </p> <p><code>&lt;A address value&gt;</code></p> <p>Send DCC extended accessory (Aspect) command</p> <p><code>&lt;w loco cv value&gt;</code></p> <p>POM write cv on main track</p> <p><code>&lt;r loco cv&gt;</code></p> <p>POM read cv on main track</p> <p><code>&lt;b loco cv bit bitvalue&gt;</code></p> <p>POM write cv bit on main track</p> <p><code>&lt;m LINEAR&gt;</code></p> <p>Set Momentum algorithm to linear acceleration</p> <p><code>&lt;m POWER&gt;</code></p> <p>Set momentum algortithm to very based on difference between current speed and throttle seting</p> <p><code>&lt;m loco momentum&gt;</code></p> <p>set momentum for loco (accel and braking)</p> <p><code>&lt;m loco accelerating braking&gt;</code></p> <p>set momentum for loco</p> <p><code>&lt;W cv value ignore1 ignore2&gt;</code></p> <p>(Deprecated) Write cv value on PROG track</p> <p><code>&lt;W loco&gt;</code></p> <p>Write loco address on PROG track</p> <p><code>&lt;W CONSIST loco REVERSE&gt;</code></p> <p>Write consist address and reverse flag on PROG track </p> <p><code>&lt;W CONSIST loco&gt;</code></p> <p>write consist address on PROG track       </p> <p><code>&lt;W cv value&gt;</code></p> <p>Write cv value on PROG track</p> <p><code>&lt;W cv bitvalue bit&gt;</code></p> <p>Write cv bit on prog track</p> <p><code>&lt;V cv value&gt;</code></p> <p>Fast read cv with expected value</p> <p><code>&lt;V cv bit bitvalue&gt;</code></p> <p>Fast read bit with expected value</p> <p><code>&lt;B cv bit bitvalue&gt;</code></p> <p>Write cv bit</p> <p><code>&lt;R cv ignore1 ignore2&gt;</code></p> <p>(Deprecated) read cv value on PROG track</p> <p><code>&lt;R cv&gt;</code></p> <p>Read cv</p> <p><code>&lt;R&gt;</code></p> <p>Read driveable loco id (may be long, short or consist)</p> <p><code>&lt;-&gt;</code></p> <p>Clear loco state and reminder table</p> <p><code>&lt;- loco&gt;</code></p> <p>remove loco state amnd reminders</p> <p><code>&lt;F loco DCCFREQ freqvalue&gt;</code></p> <p>Set DC frequencey for loco   </p> <p><code>&lt;F loco function onoff&gt;</code></p> <p>Set loco function ON/OFF</p> <p><code>&lt;M ignore d0 d1 d2 d3 d4 d5&gt;</code></p> <p>Send up to 5 byte DCC packet on MAIN track (all d values in hex)</p> <p><code>&lt;P ignore d0 d1 d2 d3 d4 d5&gt;</code></p> <p>Send up to 5 byte DCC packet on PROG track (all d values in hex)</p> <p><code>&lt;J O&gt;</code></p> <p>List turntable IDs</p> <p><code>&lt;J O id&gt;</code></p> <p>List turntable state</p> <p><code>&lt;J P id&gt;</code></p> <p>list turntable positions</p> <p><code>&lt;=&gt;</code></p> <p>list track manager states</p> <p><code>&lt;= track MAIN&gt;</code></p> <p>Set track to MAIN</p> <p><code>&lt;= track MAIN_INV&gt;</code></p> <p>Set track to MAIN inverted polatity</p> <p><code>&lt;= track MAIN_AUTO&gt;</code></p> <p>Set track to MAIN with auto reversing</p> <p><code>&lt;= track PROG&gt;</code></p> <p>Set track to PROG</p> <p><code>&lt;= track OFF&gt;</code></p> <p>Set track power OFF</p> <p><code>&lt;= track NONE&gt;</code></p> <p>Set track no output</p> <p><code>&lt;= track EXT&gt;</code></p> <p>Set track to use external sync</p> <p><code>&lt;= track AUTO&gt;</code></p> <p>Update track to auto reverse</p> <p><code>&lt;= track INV&gt;</code></p> <p>Update track to inverse polarity</p> <p><code>&lt;= track DC loco&gt;</code></p> <p>Set track to DC</p> <p><code>&lt;= track DC_INV loco&gt;</code></p> <p>Set track to DC with inverted polarity</p> <p><code>&lt;= track DCX loco&gt;</code></p> <p>Set track to DC with inverted polarity</p>"}]}